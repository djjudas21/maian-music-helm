apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "maian-music.fullname" . }}
  labels:
    {{- include "maian-music.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "maian-music.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "maian-music.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "maian-music.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: php
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: MM_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: MM_DB_PASS
            - name: MM_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: MM_ADMIN_PASS
            - name: MM_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: MM_DB_USER
            - name: MM_DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: MM_DB_HOST
            - name: MM_ADMIN_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: MM_ADMIN_USER
            - name: MM_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: MM_DB_NAME
          volumeMounts:
            - mountPath: /app/licence.lic
              subPath: licence.lic
              name: licence
              readOnly: true
          {{- if .Values.persistence.enabled }}
            - name: secure
              mountPath: /var/www/secure
              readOnly: false
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: licence
          secret:
            secretName: {{ .Release.Name }}-licence
            items:
              - key: licence.lic
                path: licence.lic
        {{- if .Values.persistence.enabled }}
        - name: secure
          persistentVolumeClaim:
            claimName: secure
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
